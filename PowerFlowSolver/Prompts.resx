<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BusKeyNotFound" xml:space="preserve">
    <value>在已经定义的案例中找不到母线标识“{0}”。</value>
  </data>
  <data name="CaseFileMissing" xml:space="preserve">
    <value>未指定案例文件。请使用 /? 参数以查看帮助。</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="CommandLineUsage" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>commandlineusage.txt;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;utf-8</value>
  </data>
  <data name="DuplicateSolverInstruction" xml:space="preserve">
    <value>在此处重新指定求解方式将导致求解器特性被重置。</value>
  </data>
  <data name="FileParseError" xml:space="preserve">
    <value>解析行{0}时发生错误：{1}</value>
  </data>
  <data name="FileParseWarning" xml:space="preserve">
    <value>行{0}：{1}</value>
  </data>
  <data name="InvalidArgument1" xml:space="preserve">
    <value>无效的参数：{0}。</value>
  </data>
  <data name="InvalidInstruction1" xml:space="preserve">
    <value>无效的指令”{0}“。</value>
  </data>
  <data name="InvalidSolver" xml:space="preserve">
    <value>无效的求解方式“{0}”。</value>
  </data>
  <data name="ParameterCountMismatch3" xml:space="preserve">
    <value>{0}：参数数量不匹配。期望参数数量为{1}；实际参数数量为{2}。</value>
  </data>
  <data name="PFReportMessage1" xml:space="preserve">
    <value>电力网络稳态潮流分析报告
案例：{0}

报告生成于 {1}</value>
  </data>
  <data name="PFReportMessage2" xml:space="preserve">
    <value>
网络统计信息 ==========
母线{0}条。运算总节点{1}个，
其中PQ节点{2}个，PV节点{3}个。
平衡节点：{4}。共计{5}条支路。</value>
  </data>
  <data name="PFReportMessage3" xml:space="preserve">
    <value>
求解信息 ==========
{0}
使用{1}迭代{2}次，最大功率误差：{3:E4} p.u.。
迭代次数  最大功率误差</value>
  </data>
  <data name="PFReportMessage3A" xml:space="preserve">
    <value>{0,6}    {1,-12:E4}</value>
  </data>
  <data name="PFReportMessage4" xml:space="preserve">
    <value>
节点潮流============
        母线              电压         相位       有功出力     无功出力     有功负载     无功负载
                         [p.u.]       [ °]        [p.u.]       [p.u.]       [p.u.]      [p.u.]</value>
  </data>
  <data name="SolutionInProgress" xml:space="preserve">
    <value>求解稳态潮流……</value>
  </data>
  <data name="x64Process" xml:space="preserve">
    <value>64位进程</value>
  </data>
  <data name="PFReportMessage4A" xml:space="preserve">
    <value>{0} {1,12:G6} {2,12:G6} {3,12:G6} {4,12:G6} {5,12:G6} {6,12:G6}</value>
  </data>
  <data name="FileSaveComplete" xml:space="preserve">
    <value>已保存：{0}。</value>
  </data>
  <data name="PFReport" xml:space="preserve">
    <value>
======== 分析报告 ========
</value>
  </data>
  <data name="PFReportMessage4B" xml:space="preserve">
    <value>{0} 孤立母线。</value>
  </data>
  <data name="PFReportMessage5" xml:space="preserve">
    <value>
支路潮流============
母线1    --&gt;   母线2            有功(1)    无功(1)    有功(2)    无功(2)   有功损耗   无功损耗   接地有功   接地无功
                                [p.u.]     [p.u.]     [p.u.]     [p.u.]     [p.u.]     [p.u.]     [p.u.]     [p.u.]</value>
  </data>
  <data name="PFReportMessage5A" xml:space="preserve">
    <value>{0} {1} {2,10:G4} {3,10:G4} {4,10:G4} {5,10:G4} {6,10:G4} {7,10:G4} {8,10:G4} {9,10:G4}</value>
  </data>
  <data name="PFReportMessage6" xml:space="preserve">
    <value>
总计================
总出力：有功 {0:G6} p.u.，无功 {1:G6} p.u.。
总负载：有功 {2:G6} p.u.，无功 {3:G6} p.u.。
总网损：有功 {4:G6} p.u.，无功 {5:G6} p.u.。
接地支路损耗：有功 {6:G6} p.u.，无功 {7:G6} p.u.。</value>
  </data>
  <data name="SolutionStatus_IntelliIterationAbort" xml:space="preserve">
    <value>（智能迭代）检测到迭代过程不收敛而中断。</value>
  </data>
  <data name="SolutionStatus_IterationFailed" xml:space="preserve">
    <value>迭代过程出现问题，可能是由于方程不可解造成的。</value>
  </data>
  <data name="SolutionStatus_MaxIteration" xml:space="preserve">
    <value>已经达到最大允许的迭代次数。</value>
  </data>
  <data name="SolutionStatus_Success" xml:space="preserve">
    <value>迭代过程收敛，求解成功结束。</value>
  </data>
  <data name="SolutionComplete" xml:space="preserve">
    <value>迭代{0}次，全程用时{1}。
{2}</value>
  </data>
  <data name="SolutionProgress" xml:space="preserve">
    <value>[{0}]已迭代{1}次，当前误差：{2:G6}，目标误差{3:G6}。</value>
  </data>
  <data name="ObsoleteInstruction" xml:space="preserve">
    <value>过时的指令。已忽略。</value>
  </data>
  <data name="FileParseComplete" xml:space="preserve">
    <value>文件分析完毕。</value>
  </data>
  <data name="TimeRemainingEstimation" xml:space="preserve">
    <value>剩余时间：少于{0}。</value>
  </data>
  <data name="IterationProgress" xml:space="preserve">
    <value>        累计用时       迭代次数   最大功率误差</value>
  </data>
  <data name="IterationProgressA" xml:space="preserve">
    <value>{0,20}   {1,8}   {2,-12:E4}</value>
  </data>
</root>